{
  "openapi": "3.1.3",
  "info": {
    "title": "Unifyze API",
    "description": "API for Unifyze social platform",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://unifyze.cloudet.co",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained after login"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "error"
            ]
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "Success": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "status"
        ]
      },
      "UserMinimal": {
        "type": "object",
        "properties": {
          "public_uuid": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "fullname": {
            "type": "string",
            "nullable": true
          },
          "profile_picture_url": {
            "type": "string"
          }
        },
        "required": [
          "public_uuid",
          "username",
          "email",
          "profile_picture_url"
        ]
      },
      "UserFull": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "public_uuid": {
                "type": "string",
                "format": "uuid"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "fullname": {
                "type": "string",
                "nullable": true
              },
              "profile_picture_url": {
                "type": "string"
              }
            },
            "required": [
              "public_uuid",
              "username",
              "email",
              "profile_picture_url"
            ]
          },
          {
            "type": "object",
            "properties": {
              "bio": {
                "type": "string",
                "nullable": true
              },
              "university_id": {
                "type": "integer",
                "nullable": true
              },
              "year_of_study": {
                "type": "integer",
                "nullable": true
              },
              "gender": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "bio"
            ]
          }
        ]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8
          },
          "username": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{5,20}$"
          },
          "fullname": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password",
          "username",
          "fullname"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "Email or username"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "public_uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "fullname": {
                    "type": "string",
                    "nullable": true
                  },
                  "profile_picture_url": {
                    "type": "string"
                  }
                },
                "required": [
                  "public_uuid",
                  "username",
                  "email",
                  "profile_picture_url"
                ]
              },
              "token": {
                "type": "string"
              }
            },
            "required": [
              "user",
              "token"
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "MeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "public_uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "fullname": {
                    "type": "string",
                    "nullable": true
                  },
                  "profile_picture_url": {
                    "type": "string"
                  }
                },
                "required": [
                  "public_uuid",
                  "username",
                  "email",
                  "profile_picture_url"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "bio": {
                    "type": "string",
                    "nullable": true
                  },
                  "university_id": {
                    "type": "integer",
                    "nullable": true
                  },
                  "year_of_study": {
                    "type": "integer",
                    "nullable": true
                  },
                  "gender": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "bio"
                ]
              }
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "public_uuid": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "fullname": {
                        "type": "string",
                        "nullable": true
                      },
                      "profile_picture_url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "public_uuid",
                      "username",
                      "email",
                      "profile_picture_url"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "bio": {
                        "type": "string",
                        "nullable": true
                      },
                      "university_id": {
                        "type": "integer",
                        "nullable": true
                      },
                      "year_of_study": {
                        "type": "integer",
                        "nullable": true
                      },
                      "gender": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "bio"
                    ]
                  }
                ]
              },
              "token": {
                "type": "string"
              }
            },
            "required": [
              "user",
              "token"
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "PasswordResetRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "VerifyResetCodeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "minimum": 100000,
            "maximum": 999999
          }
        },
        "required": [
          "code"
        ]
      },
      "VerifyResetCodeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "Post": {
        "type": "object",
        "properties": {
          "public_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the post"
          },
          "content": {
            "type": "string",
            "description": "Text content of the post"
          },
          "media_urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of media URLs associated with the post"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "followers"
            ],
            "default": "public",
            "description": "Visibility setting for the post"
          },
          "user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user who created the post"
          },
          "likes_count": {
            "type": "integer",
            "description": "Number of likes on the post"
          },
          "comments_count": {
            "type": "integer",
            "description": "Number of comments on the post"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the post was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the post was last updated"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Whether the post has been soft-deleted"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the post was soft-deleted"
          },
          "days_remaining": {
            "type": "integer",
            "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
          }
        },
        "required": [
          "public_uuid",
          "content",
          "user_uuid",
          "created_at"
        ]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text content of the post",
            "minLength": 1
          },
          "media_urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of media URLs associated with the post"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "followers"
            ],
            "default": "public",
            "description": "Visibility setting for the post"
          }
        },
        "required": [
          "content"
        ]
      },
      "UpdatePostRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text content of the post",
            "minLength": 1
          },
          "media_urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of media URLs associated with the post"
          },
          "visibility": {
            "type": "string",
            "enum": [
              "public",
              "private",
              "followers"
            ],
            "description": "Visibility setting for the post"
          }
        }
      },
      "PostResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "public_uuid": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the post"
              },
              "content": {
                "type": "string",
                "description": "Text content of the post"
              },
              "media_urls": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of media URLs associated with the post"
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "public",
                  "private",
                  "followers"
                ],
                "default": "public",
                "description": "Visibility setting for the post"
              },
              "user_uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the user who created the post"
              },
              "likes_count": {
                "type": "integer",
                "description": "Number of likes on the post"
              },
              "comments_count": {
                "type": "integer",
                "description": "Number of comments on the post"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the post was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the post was last updated"
              },
              "is_deleted": {
                "type": "boolean",
                "description": "Whether the post has been soft-deleted"
              },
              "deleted_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "When the post was soft-deleted"
              },
              "days_remaining": {
                "type": "integer",
                "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
              }
            },
            "required": [
              "public_uuid",
              "content",
              "user_uuid",
              "created_at"
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "PostListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "public_uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Unique identifier for the post"
                },
                "content": {
                  "type": "string",
                  "description": "Text content of the post"
                },
                "media_urls": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of media URLs associated with the post"
                },
                "visibility": {
                  "type": "string",
                  "enum": [
                    "public",
                    "private",
                    "followers"
                  ],
                  "default": "public",
                  "description": "Visibility setting for the post"
                },
                "user_uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "UUID of the user who created the post"
                },
                "likes_count": {
                  "type": "integer",
                  "description": "Number of likes on the post"
                },
                "comments_count": {
                  "type": "integer",
                  "description": "Number of comments on the post"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the post was created"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the post was last updated"
                },
                "is_deleted": {
                  "type": "boolean",
                  "description": "Whether the post has been soft-deleted"
                },
                "deleted_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true,
                  "description": "When the post was soft-deleted"
                },
                "days_remaining": {
                  "type": "integer",
                  "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
                }
              },
              "required": [
                "public_uuid",
                "content",
                "user_uuid",
                "created_at"
              ]
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "public_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the comment"
          },
          "content": {
            "type": "string",
            "description": "Text content of the comment"
          },
          "user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user who created the comment"
          },
          "post_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the post this comment belongs to"
          },
          "parent_comment_uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "description": "UUID of the parent comment if this is a reply"
          },
          "replies_count": {
            "type": "integer",
            "description": "Number of replies to this comment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the comment was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the comment was last updated"
          },
          "user": {
            "type": "object",
            "properties": {
              "public_uuid": {
                "type": "string",
                "format": "uuid"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "fullname": {
                "type": "string",
                "nullable": true
              },
              "profile_picture_url": {
                "type": "string"
              }
            },
            "required": [
              "public_uuid",
              "username",
              "email",
              "profile_picture_url"
            ]
          }
        },
        "required": [
          "public_uuid",
          "content",
          "user_uuid",
          "post_uuid",
          "created_at",
          "user"
        ]
      },
      "CreateCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text content of the comment",
            "minLength": 1,
            "maxLength": 1000
          }
        },
        "required": [
          "content"
        ]
      },
      "UpdateCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text content of the comment",
            "minLength": 1,
            "maxLength": 1000
          }
        },
        "required": [
          "content"
        ]
      },
      "CommentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success"
            ]
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "public_uuid": {
                "type": "string",
                "format": "uuid",
                "description": "Unique identifier for the comment"
              },
              "content": {
                "type": "string",
                "description": "Text content of the comment"
              },
              "user_uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the user who created the comment"
              },
              "post_uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the post this comment belongs to"
              },
              "parent_comment_uuid": {
                "type": "string",
                "format": "uuid",
                "nullable": true,
                "description": "UUID of the parent comment if this is a reply"
              },
              "replies_count": {
                "type": "integer",
                "description": "Number of replies to this comment"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the comment was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the comment was last updated"
              },
              "user": {
                "type": "object",
                "properties": {
                  "public_uuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "fullname": {
                    "type": "string",
                    "nullable": true
                  },
                  "profile_picture_url": {
                    "type": "string"
                  }
                },
                "required": [
                  "public_uuid",
                  "username",
                  "email",
                  "profile_picture_url"
                ]
              }
            },
            "required": [
              "public_uuid",
              "content",
              "user_uuid",
              "post_uuid",
              "created_at",
              "user"
            ]
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          }
        },
        "required": [
          "current_page",
          "total_pages",
          "total_items",
          "per_page"
        ]
      },
      "Like": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Internal ID of the like"
          },
          "user_id": {
            "type": "integer",
            "description": "ID of the user who created the like"
          },
          "post_id": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the post that was liked (null if comment like)"
          },
          "comment_id": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the comment that was liked (null if post like)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the like was created"
          },
          "user": {
            "type": "object",
            "properties": {
              "public_uuid": {
                "type": "string",
                "format": "uuid"
              },
              "username": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "fullname": {
                "type": "string",
                "nullable": true
              },
              "profile_picture_url": {
                "type": "string"
              }
            },
            "required": [
              "public_uuid",
              "username",
              "email",
              "profile_picture_url"
            ]
          }
        },
        "required": [
          "id",
          "user_id",
          "created_at",
          "user"
        ]
      },
      "Follow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Internal ID of the follow relationship"
          },
          "follower_id": {
            "type": "integer",
            "description": "ID of the user who is following"
          },
          "followed_id": {
            "type": "integer",
            "description": "ID of the user being followed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the follow relationship was created"
          }
        },
        "required": [
          "id",
          "follower_id",
          "followed_id",
          "created_at"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Internal ID of the role"
          },
          "name": {
            "type": "string",
            "description": "Name of the role (e.g., admin, superadmin, user)"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the role and its permissions"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the role was created"
          }
        },
        "required": [
          "id",
          "name",
          "created_at"
        ]
      },
      "RoleAssignmentRequest": {
        "type": "object",
        "properties": {
          "user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user to assign the role to"
          },
          "role": {
            "type": "string",
            "description": "Name of the role to assign"
          }
        },
        "required": [
          "user_uuid",
          "role"
        ]
      },
      "RoleCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the role to create"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Description of the role and its permissions"
          }
        },
        "required": [
          "name"
        ]
      },
      "RoleUpdateRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Updated description of the role"
          }
        },
        "required": [
          "description"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "public_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the notification"
          },
          "user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user receiving the notification"
          },
          "from_user_uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user who triggered the notification"
          },
          "type": {
            "type": "string",
            "enum": [
              "like",
              "comment",
              "follow",
              "mention",
              "post"
            ],
            "description": "Type of notification"
          },
          "is_read": {
            "type": "boolean",
            "description": "Whether the notification has been read"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the notification was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the notification was last updated"
          },
          "actor": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "Username of the user who triggered the notification"
              },
              "profile_picture_url": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "Profile picture URL of the user who triggered the notification"
              }
            }
          },
          "reference": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "post",
                  "comment",
                  "user"
                ],
                "description": "Type of content referenced in the notification"
              },
              "uuid": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the referenced content"
              }
            }
          }
        },
        "required": [
          "public_uuid",
          "user_uuid",
          "from_user_uuid",
          "type",
          "is_read",
          "created_at",
          "actor",
          "reference"
        ]
      },
      "NotificationUpdateRequest": {
        "type": "object",
        "properties": {
          "is_read": {
            "type": "boolean",
            "description": "Set to true to mark the notification as read"
          }
        },
        "required": [
          "is_read"
        ]
      },
      "MarkNotificationsReadRequest": {
        "type": "object",
        "properties": {
          "notification_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of notification UUIDs to mark as read"
          }
        },
        "required": [
          "notification_ids"
        ]
      }
    }
  },
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account and return authentication token",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8
                  },
                  "username": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{5,20}$"
                  },
                  "fullname": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "username",
                  "fullname"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "public_uuid": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email"
                                },
                                "fullname": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "profile_picture_url": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "public_uuid",
                                "username",
                                "email",
                                "profile_picture_url"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "bio": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "university_id": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "year_of_study": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "gender": {
                                  "type": "string",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "bio"
                              ]
                            }
                          ]
                        },
                        "token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Email or username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login to the system",
        "description": "Authenticate a user and return a JWT token",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "Email or username"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "login",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        },
                        "token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user information",
        "description": "Returns the authenticated user's profile information",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "bio": {
                              "type": "string",
                              "nullable": true
                            },
                            "university_id": {
                              "type": "integer",
                              "nullable": true
                            },
                            "year_of_study": {
                              "type": "integer",
                              "nullable": true
                            },
                            "gender": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "bio"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/password-reset/request": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request password reset",
        "description": "Send a password reset code to the user's email",
        "operationId": "requestPasswordReset",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success"
                          ]
                        },
                        "message": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "status"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/password-reset/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify password reset code",
        "description": "Verify the password reset code sent to the user's email",
        "operationId": "verifyResetCode",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 100000,
                    "maximum": 999999
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all active users (admin only)",
        "operationId": "getAllUsers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "public_uuid": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "fullname": {
                                "type": "string",
                                "nullable": true
                              },
                              "profile_picture_url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "public_uuid",
                              "username",
                              "email",
                              "profile_picture_url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "bio": {
                                "type": "string",
                                "nullable": true
                              },
                              "university_id": {
                                "type": "integer",
                                "nullable": true
                              },
                              "year_of_study": {
                                "type": "integer",
                                "nullable": true
                              },
                              "gender": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "bio"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by UUID",
        "description": "Returns a specific user's profile information",
        "operationId": "getUserByUuid",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "bio": {
                              "type": "string",
                              "nullable": true
                            },
                            "university_id": {
                              "type": "integer",
                              "nullable": true
                            },
                            "year_of_study": {
                              "type": "integer",
                              "nullable": true
                            },
                            "gender": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "bio"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update a user's profile information (can only update own profile)",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "username": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{5,20}$"
                  },
                  "fullname": {
                    "type": "string"
                  },
                  "bio": {
                    "type": "string"
                  },
                  "university_id": {
                    "type": "integer"
                  },
                  "year_of_study": {
                    "type": "integer"
                  },
                  "gender": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "bio": {
                              "type": "string",
                              "nullable": true
                            },
                            "university_id": {
                              "type": "integer",
                              "nullable": true
                            },
                            "year_of_study": {
                              "type": "integer",
                              "nullable": true
                            },
                            "gender": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "bio"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Update failed or no valid fields provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Soft delete a user account (can delete own account or admin can delete any account)",
        "operationId": "deleteUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to delete this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/recover": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Recover deleted user",
        "description": "Recover a soft-deleted user account (admin only)",
        "operationId": "recoverUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User recovered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not an admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/profile-picture": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Upload profile picture",
        "description": "Upload a new profile picture for a user",
        "operationId": "uploadProfilePicture",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile_picture": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "profile_picture"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile picture uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "profile_picture_url": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid file or upload failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to update this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/promote-admin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Promote user to admin",
        "description": "Promote a regular user to admin role (superadmin only)",
        "operationId": "promoteAdmin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User promoted to admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not a superadmin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/demote-admin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Demote admin to regular user",
        "description": "Demote an admin to regular user role (superadmin only)",
        "operationId": "demoteAdmin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin demoted to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not a superadmin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/admins": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get admin list",
        "description": "Returns a list of all admin users (admin or superadmin only)",
        "operationId": "getAdminList",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin list fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "public_uuid": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "fullname": {
                                "type": "string",
                                "nullable": true
                              },
                              "profile_picture_url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "public_uuid",
                              "username",
                              "email",
                              "profile_picture_url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "bio": {
                                "type": "string",
                                "nullable": true
                              },
                              "university_id": {
                                "type": "integer",
                                "nullable": true
                              },
                              "year_of_study": {
                                "type": "integer",
                                "nullable": true
                              },
                              "gender": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "bio"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not an admin or superadmin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/role/{role}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users by role",
        "description": "Returns a list of users with the specified role (admin or superadmin only)",
        "operationId": "getUsersByRole",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "admin",
                "superadmin"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users with role fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "public_uuid": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "fullname": {
                                "type": "string",
                                "nullable": true
                              },
                              "profile_picture_url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "public_uuid",
                              "username",
                              "email",
                              "profile_picture_url"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "bio": {
                                "type": "string",
                                "nullable": true
                              },
                              "university_id": {
                                "type": "integer",
                                "nullable": true
                              },
                              "year_of_study": {
                                "type": "integer",
                                "nullable": true
                              },
                              "gender": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "bio"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not an admin or superadmin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{uuid}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get post by UUID",
        "description": "Retrieve a specific post by its UUID",
        "operationId": "getPostByUuid",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the post"
                        },
                        "content": {
                          "type": "string",
                          "description": "Text content of the post"
                        },
                        "media_urls": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of media URLs associated with the post"
                        },
                        "visibility": {
                          "type": "string",
                          "enum": [
                            "public",
                            "private",
                            "followers"
                          ],
                          "default": "public",
                          "description": "Visibility setting for the post"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who created the post"
                        },
                        "likes_count": {
                          "type": "integer",
                          "description": "Number of likes on the post"
                        },
                        "comments_count": {
                          "type": "integer",
                          "description": "Number of comments on the post"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the post was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the post was last updated"
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the post has been soft-deleted"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "When the post was soft-deleted"
                        },
                        "days_remaining": {
                          "type": "integer",
                          "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
                        }
                      },
                      "required": [
                        "public_uuid",
                        "content",
                        "user_uuid",
                        "created_at"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Posts"
        ],
        "summary": "Update post",
        "description": "Update an existing post (only the owner or admin can update)",
        "operationId": "updatePost",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Text content of the post",
                    "minLength": 1
                  },
                  "media_urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of media URLs associated with the post"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private",
                      "followers"
                    ],
                    "description": "Visibility setting for the post"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the post"
                        },
                        "content": {
                          "type": "string",
                          "description": "Text content of the post"
                        },
                        "media_urls": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of media URLs associated with the post"
                        },
                        "visibility": {
                          "type": "string",
                          "enum": [
                            "public",
                            "private",
                            "followers"
                          ],
                          "default": "public",
                          "description": "Visibility setting for the post"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who created the post"
                        },
                        "likes_count": {
                          "type": "integer",
                          "description": "Number of likes on the post"
                        },
                        "comments_count": {
                          "type": "integer",
                          "description": "Number of comments on the post"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the post was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the post was last updated"
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the post has been soft-deleted"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "When the post was soft-deleted"
                        },
                        "days_remaining": {
                          "type": "integer",
                          "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
                        }
                      },
                      "required": [
                        "public_uuid",
                        "content",
                        "user_uuid",
                        "created_at"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Update failed or no valid fields provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to update this post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete post",
        "description": "Soft delete a post (only the owner or admin can delete)",
        "operationId": "deletePost",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to delete this post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create post",
        "description": "Create a new post",
        "operationId": "createPost",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Text content of the post",
                    "minLength": 1
                  },
                  "media_urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of media URLs associated with the post"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private",
                      "followers"
                    ],
                    "default": "public",
                    "description": "Visibility setting for the post"
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the post"
                        },
                        "content": {
                          "type": "string",
                          "description": "Text content of the post"
                        },
                        "media_urls": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of media URLs associated with the post"
                        },
                        "visibility": {
                          "type": "string",
                          "enum": [
                            "public",
                            "private",
                            "followers"
                          ],
                          "default": "public",
                          "description": "Visibility setting for the post"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who created the post"
                        },
                        "likes_count": {
                          "type": "integer",
                          "description": "Number of likes on the post"
                        },
                        "comments_count": {
                          "type": "integer",
                          "description": "Number of comments on the post"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the post was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the post was last updated"
                        },
                        "is_deleted": {
                          "type": "boolean",
                          "description": "Whether the post has been soft-deleted"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "When the post was soft-deleted"
                        },
                        "days_remaining": {
                          "type": "integer",
                          "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
                        }
                      },
                      "required": [
                        "public_uuid",
                        "content",
                        "user_uuid",
                        "created_at"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/trash": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get soft-deleted posts",
        "description": "Retrieve all soft-deleted posts for the authenticated user",
        "operationId": "getSoftDeletedPosts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Soft-deleted posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the post"
                          },
                          "content": {
                            "type": "string",
                            "description": "Text content of the post"
                          },
                          "media_urls": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of media URLs associated with the post"
                          },
                          "visibility": {
                            "type": "string",
                            "enum": [
                              "public",
                              "private",
                              "followers"
                            ],
                            "default": "public",
                            "description": "Visibility setting for the post"
                          },
                          "user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user who created the post"
                          },
                          "likes_count": {
                            "type": "integer",
                            "description": "Number of likes on the post"
                          },
                          "comments_count": {
                            "type": "integer",
                            "description": "Number of comments on the post"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the post was created"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the post was last updated"
                          },
                          "is_deleted": {
                            "type": "boolean",
                            "description": "Whether the post has been soft-deleted"
                          },
                          "deleted_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "When the post was soft-deleted"
                          },
                          "days_remaining": {
                            "type": "integer",
                            "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
                          }
                        },
                        "required": [
                          "public_uuid",
                          "content",
                          "user_uuid",
                          "created_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{uuid}/recover": {
      "patch": {
        "tags": [
          "Posts"
        ],
        "summary": "Recover post",
        "description": "Recover a soft-deleted post (only the owner or admin can recover)",
        "operationId": "recoverPost",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post recovered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Post is not deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to recover this post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get feed",
        "description": "Retrieve the authenticated user's feed (posts from followed users and own posts)",
        "operationId": "getFeed",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Feed fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the post"
                          },
                          "content": {
                            "type": "string",
                            "description": "Text content of the post"
                          },
                          "media_urls": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of media URLs associated with the post"
                          },
                          "visibility": {
                            "type": "string",
                            "enum": [
                              "public",
                              "private",
                              "followers"
                            ],
                            "default": "public",
                            "description": "Visibility setting for the post"
                          },
                          "user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user who created the post"
                          },
                          "likes_count": {
                            "type": "integer",
                            "description": "Number of likes on the post"
                          },
                          "comments_count": {
                            "type": "integer",
                            "description": "Number of comments on the post"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the post was created"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the post was last updated"
                          },
                          "is_deleted": {
                            "type": "boolean",
                            "description": "Whether the post has been soft-deleted"
                          },
                          "deleted_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "When the post was soft-deleted"
                          },
                          "days_remaining": {
                            "type": "integer",
                            "description": "Days remaining until permanent deletion (only for soft-deleted posts)"
                          }
                        },
                        "required": [
                          "public_uuid",
                          "content",
                          "user_uuid",
                          "created_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{post_uuid}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get comments for post",
        "description": "Retrieve all comments for a specific post",
        "operationId": "getCommentsForPost",
        "parameters": [
          {
            "name": "post_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier for the comment"
                          },
                          "content": {
                            "type": "string",
                            "description": "Text content of the comment"
                          },
                          "user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user who created the comment"
                          },
                          "post_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the post this comment belongs to"
                          },
                          "parent_comment_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true,
                            "description": "UUID of the parent comment if this is a reply"
                          },
                          "replies_count": {
                            "type": "integer",
                            "description": "Number of replies to this comment"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the comment was created"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the comment was last updated"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "public_uuid": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "username": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string",
                                "format": "email"
                              },
                              "fullname": {
                                "type": "string",
                                "nullable": true
                              },
                              "profile_picture_url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "public_uuid",
                              "username",
                              "email",
                              "profile_picture_url"
                            ]
                          }
                        },
                        "required": [
                          "public_uuid",
                          "content",
                          "user_uuid",
                          "post_uuid",
                          "created_at",
                          "user"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "current_page",
                        "total_pages",
                        "total_items",
                        "per_page"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create comment",
        "description": "Create a new comment on a post",
        "operationId": "createComment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "post_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Text content of the comment",
                    "minLength": 1,
                    "maxLength": 1000
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the comment"
                        },
                        "content": {
                          "type": "string",
                          "description": "Text content of the comment"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who created the comment"
                        },
                        "post_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the post this comment belongs to"
                        },
                        "parent_comment_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true,
                          "description": "UUID of the parent comment if this is a reply"
                        },
                        "replies_count": {
                          "type": "integer",
                          "description": "Number of replies to this comment"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the comment was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the comment was last updated"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        }
                      },
                      "required": [
                        "public_uuid",
                        "content",
                        "user_uuid",
                        "post_uuid",
                        "created_at",
                        "user"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/comments/{uuid}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get comment by UUID",
        "description": "Retrieve a specific comment by its UUID",
        "operationId": "getCommentByUuid",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the comment"
                        },
                        "content": {
                          "type": "string",
                          "description": "Text content of the comment"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who created the comment"
                        },
                        "post_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the post this comment belongs to"
                        },
                        "parent_comment_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true,
                          "description": "UUID of the parent comment if this is a reply"
                        },
                        "replies_count": {
                          "type": "integer",
                          "description": "Number of replies to this comment"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the comment was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the comment was last updated"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        }
                      },
                      "required": [
                        "public_uuid",
                        "content",
                        "user_uuid",
                        "post_uuid",
                        "created_at",
                        "user"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Comments"
        ],
        "summary": "Update comment",
        "description": "Update an existing comment (only the owner or admin can update)",
        "operationId": "updateComment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Text content of the comment",
                    "minLength": 1,
                    "maxLength": 1000
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Unique identifier for the comment"
                        },
                        "content": {
                          "type": "string",
                          "description": "Text content of the comment"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who created the comment"
                        },
                        "post_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the post this comment belongs to"
                        },
                        "parent_comment_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true,
                          "description": "UUID of the parent comment if this is a reply"
                        },
                        "replies_count": {
                          "type": "integer",
                          "description": "Number of replies to this comment"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the comment was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the comment was last updated"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "public_uuid": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "username": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string",
                              "format": "email"
                            },
                            "fullname": {
                              "type": "string",
                              "nullable": true
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "public_uuid",
                            "username",
                            "email",
                            "profile_picture_url"
                          ]
                        }
                      },
                      "required": [
                        "public_uuid",
                        "content",
                        "user_uuid",
                        "post_uuid",
                        "created_at",
                        "user"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Update failed or no valid fields provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to update this comment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete comment",
        "description": "Delete a comment (only the owner, post owner, or admin can delete)",
        "operationId": "deleteComment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to delete this comment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{uuid}/like": {
      "post": {
        "tags": [
          "Likes"
        ],
        "summary": "Toggle like on post",
        "description": "Add or remove a like on a post (toggle functionality)",
        "operationId": "togglePostLike",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Like toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "likes_count": {
                      "type": "integer",
                      "description": "Updated count of likes for the post"
                    },
                    "is_liked": {
                      "type": "boolean",
                      "description": "Whether the post is now liked by the user"
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "likes_count",
                    "is_liked"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error toggling like",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{uuid}/likes": {
      "get": {
        "tags": [
          "Likes"
        ],
        "summary": "Get likes for post",
        "description": "Retrieve all users who liked a specific post",
        "operationId": "getPostLikes",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Likes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "username": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "fullname": {
                            "type": "string",
                            "nullable": true
                          },
                          "profile_picture_url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "public_uuid",
                          "username",
                          "email",
                          "profile_picture_url"
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total count of likes for the post"
                    }
                  },
                  "required": [
                    "status",
                    "likes",
                    "count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/{uuid}/likes/count": {
      "get": {
        "tags": [
          "Likes"
        ],
        "summary": "Get like count for post",
        "description": "Retrieve the number of likes for a specific post",
        "operationId": "getPostLikeCount",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Like count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total count of likes for the post"
                    }
                  },
                  "required": [
                    "status",
                    "count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/comments/{uuid}/like": {
      "post": {
        "tags": [
          "Likes"
        ],
        "summary": "Toggle like on comment",
        "description": "Add or remove a like on a comment (toggle functionality)",
        "operationId": "toggleCommentLike",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Like toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "likes_count": {
                      "type": "integer",
                      "description": "Updated count of likes for the comment"
                    },
                    "is_liked": {
                      "type": "boolean",
                      "description": "Whether the comment is now liked by the user"
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "likes_count",
                    "is_liked"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error toggling like",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/comments/{uuid}/likes": {
      "get": {
        "tags": [
          "Likes"
        ],
        "summary": "Get likes for comment",
        "description": "Retrieve all users who liked a specific comment",
        "operationId": "getCommentLikes",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Likes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "likes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "username": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "fullname": {
                            "type": "string",
                            "nullable": true
                          },
                          "profile_picture_url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "public_uuid",
                          "username",
                          "email",
                          "profile_picture_url"
                        ]
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total count of likes for the comment"
                    }
                  },
                  "required": [
                    "status",
                    "likes",
                    "count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/comments/{uuid}/likes/count": {
      "get": {
        "tags": [
          "Likes"
        ],
        "summary": "Get like count for comment",
        "description": "Retrieve the number of likes for a specific comment",
        "operationId": "getCommentLikeCount",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Like count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total count of likes for the comment"
                    }
                  },
                  "required": [
                    "status",
                    "count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/follow": {
      "post": {
        "tags": [
          "Follows"
        ],
        "summary": "Toggle follow status",
        "description": "Follow or unfollow a user (toggle functionality)",
        "operationId": "follow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user to follow/unfollow"
          }
        ],
        "responses": {
          "200": {
            "description": "Follow status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "following",
                        "unfollowing"
                      ],
                      "description": "The action that was performed (followed or unfollowed)"
                    },
                    "following_count": {
                      "type": "integer",
                      "description": "Updated count of users the current user is following"
                    },
                    "followers_count": {
                      "type": "integer",
                      "description": "Updated count of users following the current user"
                    },
                    "target_following_count": {
                      "type": "integer",
                      "description": "Updated count of users the target user is following"
                    },
                    "target_followers_count": {
                      "type": "integer",
                      "description": "Updated count of users following the target user"
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "action",
                    "following_count",
                    "followers_count",
                    "target_following_count",
                    "target_followers_count"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error toggling follow status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/followers": {
      "get": {
        "tags": [
          "Follows"
        ],
        "summary": "Get user followers",
        "description": "Retrieve all users who follow a specific user",
        "operationId": "getFollowers",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user whose followers to retrieve"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Followers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "username": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "fullname": {
                            "type": "string",
                            "nullable": true
                          },
                          "profile_picture_url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "public_uuid",
                          "username",
                          "email",
                          "profile_picture_url"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "current_page",
                        "total_pages",
                        "total_items",
                        "per_page"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/following": {
      "get": {
        "tags": [
          "Follows"
        ],
        "summary": "Get users followed by user",
        "description": "Retrieve all users followed by a specific user",
        "operationId": "getFollowing",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user whose following list to retrieve"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Following list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "username": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "fullname": {
                            "type": "string",
                            "nullable": true
                          },
                          "profile_picture_url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "public_uuid",
                          "username",
                          "email",
                          "profile_picture_url"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "total_items": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "current_page",
                        "total_pages",
                        "total_items",
                        "per_page"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/followers/count": {
      "get": {
        "tags": [
          "Follows"
        ],
        "summary": "Get user followers count",
        "description": "Retrieve the number of followers for a specific user",
        "operationId": "getFollowersCount",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user whose followers count to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Followers count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total count of followers for the user"
                    }
                  },
                  "required": [
                    "status",
                    "count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{uuid}/following/count": {
      "get": {
        "tags": [
          "Follows"
        ],
        "summary": "Get user following count",
        "description": "Retrieve the number of users followed by a specific user",
        "operationId": "getFollowingCount",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user whose following count to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Following count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total count of users followed by the user"
                    }
                  },
                  "required": [
                    "status",
                    "count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List all roles",
        "description": "Returns a list of all available roles (admin or superadmin only)",
        "operationId": "getRoles",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Roles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Internal ID of the role"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the role (e.g., admin, superadmin, user)"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "description": "Description of the role and its permissions"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the role was created"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "created_at"
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to view roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a new role",
        "description": "Creates a new role (superadmin only)",
        "operationId": "createRole",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the role to create"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true,
                    "description": "Description of the role and its permissions"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the created role"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to create roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error - role may already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles/{role}": {
      "parameters": [
        {
          "name": "role",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Name of the role"
        }
      ],
      "patch": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role",
        "description": "Updates a role's description (superadmin only)",
        "operationId": "updateRole",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Updated description of the role"
                  }
                },
                "required": [
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the updated role"
                        },
                        "description": {
                          "type": "string",
                          "description": "Updated description of the role"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to update roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error - role may not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role",
        "description": "Deletes a role (superadmin only)",
        "operationId": "deleteRole",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the deleted role"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to delete roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error - role may not exist or is protected",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles/assign": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Assign role to user",
        "description": "Assigns a role to a user (superadmin only)",
        "operationId": "assignRole",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUID of the user to assign the role to"
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the role to assign"
                  }
                },
                "required": [
                  "user_uuid",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user"
                        },
                        "role": {
                          "type": "string",
                          "description": "Name of the assigned role"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to assign roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error - user may already have this role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles/remove": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Remove role from user",
        "description": "Removes a role from a user (superadmin only)",
        "operationId": "removeRole",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_uuid": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUID of the user to assign the role to"
                  },
                  "role": {
                    "type": "string",
                    "description": "Name of the role to assign"
                  }
                },
                "required": [
                  "user_uuid",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user"
                        },
                        "role": {
                          "type": "string",
                          "description": "Name of the removed role"
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - not authorized to remove roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error - user may not have this role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get all notifications",
        "description": "Retrieves all notifications for the authenticated user",
        "operationId": "getAllNotifications",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            },
            "description": "Maximum number of notifications to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "Number of notifications to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the notification"
                          },
                          "user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user receiving the notification"
                          },
                          "from_user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user who triggered the notification"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "like",
                              "comment",
                              "follow",
                              "mention",
                              "post"
                            ],
                            "description": "Type of notification"
                          },
                          "is_read": {
                            "type": "boolean",
                            "description": "Whether the notification has been read"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the notification was created"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the notification was last updated"
                          },
                          "actor": {
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Username of the user who triggered the notification"
                              },
                              "profile_picture_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "description": "Profile picture URL of the user who triggered the notification"
                              }
                            }
                          },
                          "reference": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "post",
                                  "comment",
                                  "user"
                                ],
                                "description": "Type of content referenced in the notification"
                              },
                              "uuid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "UUID of the referenced content"
                              }
                            }
                          }
                        },
                        "required": [
                          "public_uuid",
                          "user_uuid",
                          "from_user_uuid",
                          "type",
                          "is_read",
                          "created_at",
                          "actor",
                          "reference"
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{uuid}": {
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "description": "UUID of the notification"
        }
      ],
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get notification by UUID",
        "description": "Retrieves a specific notification by its UUID",
        "operationId": "getNotificationByUuid",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Notification retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the notification"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user receiving the notification"
                        },
                        "from_user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who triggered the notification"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "like",
                            "comment",
                            "follow",
                            "mention",
                            "post"
                          ],
                          "description": "Type of notification"
                        },
                        "is_read": {
                          "type": "boolean",
                          "description": "Whether the notification has been read"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the notification was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the notification was last updated"
                        },
                        "actor": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Username of the user who triggered the notification"
                            },
                            "profile_picture_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "description": "Profile picture URL of the user who triggered the notification"
                            }
                          }
                        },
                        "reference": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "post",
                                "comment",
                                "user"
                              ],
                              "description": "Type of content referenced in the notification"
                            },
                            "uuid": {
                              "type": "string",
                              "format": "uuid",
                              "description": "UUID of the referenced content"
                            }
                          }
                        }
                      },
                      "required": [
                        "public_uuid",
                        "user_uuid",
                        "from_user_uuid",
                        "type",
                        "is_read",
                        "created_at",
                        "actor",
                        "reference"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Update notification",
        "description": "Updates a notification (typically to mark it as read)",
        "operationId": "updateNotification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_read": {
                    "type": "boolean",
                    "description": "Set to true to mark the notification as read"
                  }
                },
                "required": [
                  "is_read"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "public_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the notification"
                        },
                        "user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user receiving the notification"
                        },
                        "from_user_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "UUID of the user who triggered the notification"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "like",
                            "comment",
                            "follow",
                            "mention",
                            "post"
                          ],
                          "description": "Type of notification"
                        },
                        "is_read": {
                          "type": "boolean",
                          "description": "Whether the notification has been read"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the notification was created"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the notification was last updated"
                        },
                        "actor": {
                          "type": "object",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "Username of the user who triggered the notification"
                            },
                            "profile_picture_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true,
                              "description": "Profile picture URL of the user who triggered the notification"
                            }
                          }
                        },
                        "reference": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "post",
                                "comment",
                                "user"
                              ],
                              "description": "Type of content referenced in the notification"
                            },
                            "uuid": {
                              "type": "string",
                              "format": "uuid",
                              "description": "UUID of the referenced content"
                            }
                          }
                        }
                      },
                      "required": [
                        "public_uuid",
                        "user_uuid",
                        "from_user_uuid",
                        "type",
                        "is_read",
                        "created_at",
                        "actor",
                        "reference"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error or no valid fields provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Delete notification",
        "description": "Deletes a notification",
        "operationId": "deleteNotification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/mark-read": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark multiple notifications as read",
        "description": "Marks multiple notifications as read in a single request",
        "operationId": "markNotificationsRead",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification_ids": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "Array of notification UUIDs to mark as read"
                  }
                },
                "required": [
                  "notification_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notifications marked as read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/notifications/unread": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get unread notifications",
        "description": "Retrieves all unread notifications for the authenticated user",
        "operationId": "getUnreadNotifications",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Maximum number of notifications to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Unread notifications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "public_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the notification"
                          },
                          "user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user receiving the notification"
                          },
                          "from_user_uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "UUID of the user who triggered the notification"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "like",
                              "comment",
                              "follow",
                              "mention",
                              "post"
                            ],
                            "description": "Type of notification"
                          },
                          "is_read": {
                            "type": "boolean",
                            "description": "Whether the notification has been read"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the notification was created"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the notification was last updated"
                          },
                          "actor": {
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string",
                                "description": "Username of the user who triggered the notification"
                              },
                              "profile_picture_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "description": "Profile picture URL of the user who triggered the notification"
                              }
                            }
                          },
                          "reference": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "post",
                                  "comment",
                                  "user"
                                ],
                                "description": "Type of content referenced in the notification"
                              },
                              "uuid": {
                                "type": "string",
                                "format": "uuid",
                                "description": "UUID of the referenced content"
                              }
                            }
                          }
                        },
                        "required": [
                          "public_uuid",
                          "user_uuid",
                          "from_user_uuid",
                          "type",
                          "is_read",
                          "created_at",
                          "actor",
                          "reference"
                        ]
                      }
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}